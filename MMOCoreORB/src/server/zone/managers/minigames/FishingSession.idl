/*
				Copyright <SWGEmu>
		See file COPYING for copying conditions.
*/

package server.zone.managers.minigames;

import engine.util.Facade;
import server.zone.objects.creature.CreatureObject;
import server.zone.objects.scene.SceneObject;
import server.zone.managers.minigames.events.FishingEvent;

class FishingSession extends Facade {
	protected transient FishingEvent event; 
	protected SceneObject marker;
	
	protected int nextAction;
	protected int fish;
	protected unsigned int  boxID;
	protected int fishingState;
	protected string mood;
	
	public FishingSession(FishingEvent event, SceneObject marker, int nextAction, int fish, unsigned int boxID, int fishingState, final string mood) {
		setEvent(event);
		setMarker(marker);
		setNextAction(nextAction);
		setFish(fish);
		setFishBoxID(boxID);
		setFishingState(fishingState);
		setMood(mood);
	}

	@local
	public void setEvent(FishingEvent ev) {
		event = ev;
	}
	
	public void setMood(final string m) {
		mood = m;
	}

	@local
	public FishingEvent getEvent() {
		return event;
	}

	public void setNextAction(int action) {
		nextAction = action;
	}

	public int getNextAction() {
		return nextAction;
	}

	public void setFishBoxID(unsigned int box) {
		boxID = box;
	}

	public unsigned int getFishBoxID() {
		return boxID;
	}

	public SceneObject getMarker() {
		return marker;
	}

	public void setMarker(SceneObject mar) {
		marker = mar;
	}

	public int getFish() {
		return fish;
	}

	public void setFish(int fi) {
		fish = fi;
	}

	public int getFishingState() {
		return fishingState;
	}

	public void setFishingState(int state) {
		fishingState = state;
	}

	public void update(int nextAction, SceneObject marker, int fish, unsigned int boxID, int fishingState) {
		setNextAction(nextAction);
		setMarker(marker);
		setFish(fish);
		setFishBoxID(boxID);
		setFishingState(fishingState);
	}

	public string getMoodString() {
		return mood;
	}
}
