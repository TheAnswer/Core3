/*
				Copyright <SWGEmu>
		See file COPYING for copying conditions.*/

package server.zone;

import server.zone.managers.player.creation.PlayerCreationManager;
import engine.core.ManagedService;

import server.zone.ZoneServer;
import server.zone.ZonePacketHandler;

import server.chat.ChatManager;
import server.zone.managers.objectcontroller.ObjectController;
import server.zone.managers.name.NameManager;
import server.zone.managers.holocron.HolocronManager;
import server.zone.managers.sui.SuiManager;
import server.zone.managers.player.PlayerManager;
import server.zone.managers.skill.SkillManager;
import server.zone.managers.vendor.VendorManager;
import server.zone.managers.minigames.FishingManager;
import server.zone.managers.minigames.GamblingManager;
import server.zone.managers.minigames.ForageManager;

@dirty
class ZoneProcessServer extends ManagedService {
	transient protected ZoneServer zoneServer;

	transient protected PlayerCreationManager playerCreationManager;

	transient protected VendorManager vendorManager;

	@local
	transient protected ZonePacketHandler zonePacketHandler;

	//Static Managers
	transient protected NameManager nameManager;

	transient protected HolocronManager holocronManager;

	transient protected SuiManager suiManager;

	transient protected SkillManager professionManager;

	private transient FishingManager fishingManager;
	private transient GamblingManager gamblingManager;
	private transient ForageManager forageManager;

	transient protected ObjectController objectController;

	public native ZoneProcessServer(ZoneServer server);

	public native void initialize();

	public native void stop();

	@local
	@dirty
	public VendorManager getVendorManager() {
		return vendorManager;
	}

	@dirty
	public ZoneServer getZoneServer() {
		return zoneServer;
	}

	@local
	@dirty
	public ZonePacketHandler getPacketHandler() {
		return zonePacketHandler;
	}

	@local
	@dirty
	public SkillManager getSkillManager() {
		return professionManager;
	}

	@local
	@dirty
	public ObjectController getObjectController() {
		return objectController;
	}

	@dirty
	public PlayerManager getPlayerManager() {
		return zoneServer.getPlayerManager();
	}

	@local
	@dirty
	public NameManager getNameManager() {
		return nameManager;
	}

	@local
	@dirty
	public HolocronManager getHolocronManager() {
		return holocronManager;
	}

	@dirty
	public ChatManager getChatManager() {
		return zoneServer.getChatManager();
	}

	@local
	@dirty
	public SuiManager getSuiManager() {
		return suiManager;
	}

	@dirty
	public FishingManager getFishingManager() {
		return fishingManager;
	}

	@dirty
	public GamblingManager getGamblingManager() {
		return gamblingManager;
	}

	@dirty
	public ForageManager getForageManager() {
		return forageManager;
	}
}
