/*
				Copyright <SWGEmu>
		See file COPYING for copying conditions.*/

package server.zone.objects.intangible;

import server.zone.objects.intangible.IntangibleObject;
import server.zone.objects.tangible.DespawnLairOnPlayerDisappear;
import server.zone.objects.creature.CreatureObject;
include engine.util.u3d.CloseObjectsVector;
include engine.util.u3d.QuadTreeEntry;

class TheaterObject extends IntangibleObject {
	protected int numberOfPlayersInRange;
	protected boolean despawnOnNoPlayersInRange;

	protected transient DespawnLairOnPlayerDisappear despawnEvent;

	public TheaterObject() {
		Logger.setLoggingName("TheaterObject");

		super.closeobjects = new CloseObjectsVector();
		super.closeobjects.setNoDuplicateInsertPlan();

		numberOfPlayersInRange = 0;
		despawnOnNoPlayersInRange = false;
	}

	@read
	public int getNumberOfPlayersInRange() {
		return numberOfPlayersInRange;
	}

	@read
	public boolean getDespawnOnNoPlayersInRange() {
		return despawnOnNoPlayersInRange;
	}

	@preLocked
	public void setDespawnOnNoPlayersInRange(boolean b) {
		despawnOnNoPlayersInRange = b;
	}

	public void notifyInsert(QuadTreeEntry entry) {
		SceneObject obj = (SceneObject) entry;

		if (obj == this)
			return;

		if (obj.isPlayerCreature()) {
			CreatureObject creo = (CreatureObject) obj;
			if (!creo.isInvisible()) {
				numberOfPlayersInRange++;
				clearDespawnEvent();
			}
		}
	}

	public void notifyDissapear(QuadTreeEntry entry) {
		SceneObject obj = (SceneObject) entry;

		if (obj == this)
			return;

		if (obj.isPlayerCreature()) {
			CreatureObject creo = (CreatureObject) obj;
			if (!creo.isInvisible()) {
				numberOfPlayersInRange = numberOfPlayersInRange - 1;

				if (numberOfPlayersInRange <= 0 && despawnOnNoPlayersInRange)
					activateDespawnEvent();
			}
		}
	}

	public void activateDespawnEvent() {
		if (despawnEvent != null)
			return;

		despawnEvent = new DespawnLairOnPlayerDisappear(this);
		despawnEvent.schedule(300000);
	}

	public void clearDespawnEvent() {
		if (despawnEvent == null)
			return;

		despawnEvent.cancel();
		despawnEvent = null;
	}

	@dirty
	public boolean isTheaterObject() {
		return true;
	}
}
