/*
				Copyright <SWGEmu>
		See file COPYING for copying conditions.*/

package server.zone.objects.tangible.component.genetic;

import server.zone.objects.tangible.component.Component;
include server.zone.objects.manufactureschematic.craftingvalues.CraftingValues;

import server.zone.packets.scene.AttributeListMessage;
import server.zone.objects.creature.CreatureObject;

@json
class GeneticComponent extends Component {

	protected float cleverness;
	protected float endurance;
	protected float fierceness;
	protected float power;
	protected float intellect;
	protected float courage;
	protected float dependability;
	protected float dexterity;
	protected float fortitude;
	protected float hardiness;

	protected string special1;
	protected string special2;
	protected boolean ranged;

	protected int quality;
	protected int armorRating;

	protected float kinResist;
	protected float energyResist;
	protected float blastResist;
	protected float coldResist;
	protected float heatResist;
	protected float elecResist;
	protected float acidResist;
	protected float stunResist;
	protected float saberResist;

	// Extra non visible stats
	protected int level;

	protected int health;
	protected int action;
	protected int mind;

	protected int willPower;
	protected int constitution;
	protected int stamina;

	protected int strength;
	protected int focus;
	protected int quickness;

	protected float hit;
	protected float speed;

	protected int minDam;
	protected int maxDam;
	protected int specialResists;

	public GeneticComponent() {
		Logger.setLoggingName("GeneticComponent");

		fortitude = 0.f;
		hardiness = 0.f;
		dexterity = 0.f;
		endurance = 0.f;
		intellect = 0.f;
		cleverness = 0.f;
		dependability = 0.f;
		courage = 0.f;
		fierceness = 0.f;
		power = 0.f;

		willPower = 0;
		constitution = 0;
		stamina = 0;
		strength = 0;
		focus = 0;
		quickness = 0;

		special1 = "none";
		special2 = "none";
		ranged = false;
		quality = 7;

		armorRating = 0;
		kinResist = 0.f;
		energyResist = 0.f;
		blastResist = 0.f;
		coldResist = 0.f;
		heatResist = 0.f;
		elecResist = 0.f;
		acidResist = 0.f;
		stunResist = 0.f;
		saberResist = -1.f;

		level = 1;
		health = 10;
		action = 10;
		mind = 10;
		hit = 0.f;
		speed = 0;
		minDam = 1;
		maxDam = 1;
		specialResists = 0;
	}

	@dirty
	public native void setSpecialResist(int type);

	@dirty
	public native boolean isSpecialResist(int type);

	public void setStats(int cle, int end, int fie, int pow,
						    int ite, int cou, int dep, int dex,
						    int frt, int har){
		cleverness = cle;
		endurance = end;
		fierceness = fie;
		power = pow;
		intellect = ite;
		courage = cou;
		dependability = dep;
		fortitude = frt;
		hardiness = har;
		dexterity = dex;
	}

	@dirty
	public int getCleverness() {
		return cleverness;
	}

	@dirty
	public int getEndurance() {
		return endurance;
	}

	@dirty
	public int getFierceness() {
		return fierceness;
	}

	@dirty
	public int getPower() {
		return power;
	}

	@dirty
	public int getIntellect() {
		return intellect;
	}

	@dirty
	public int getCourage() {
		return courage;
	}

	@dirty
	public int getDependability() {
		return dependability;
	}

	@dirty
	public int getDexterity() {
		return dexterity;
	}

	@dirty
	public int getFortitude() {
		return fortitude;
	}

	@dirty
	public int getHardiness() {
		return hardiness;
	}

	public void setLevel(int value) {
		level = value;
	}

	@dirty
	public float getKinetic() {
		return kinResist;
	}

	@dirty
	public float getEnergy() {
		return energyResist;
	}

	@dirty
	public float getBlast() {
		return blastResist;
	}

	@dirty
	public float getCold() {
		return coldResist;
	}

	@dirty
	public float getHeat() {
		return heatResist;
	}

	@dirty
	public float getElectrical() {
		return elecResist;
	}

	@dirty
	public float getAcid() {
		return acidResist;
	}

	@dirty
	public float getStun() {
		return stunResist;
	}

	@dirty
	public float getSaber() {
		return saberResist;
	}

	@dirty
	public string getSpecial1() {
		return special1;
	}

	@dirty
	public string getSpecial2() {
		return special2;
	}

	@dirty
	public int getArmor() {
		return armorRating;
	}

	@dirty
	public float getHit() {
		return hit;
	}

	@dirty
	public float getSpeed() {
		return speed;
	}

	@dirty
	public int getMinDamage() {
		return minDam;
	}

	@dirty
	public int getMaxDamage() {
		return maxDam;
	}

	@dirty
	public int getHealth(){
		return health;
	}

	@dirty
	public int getMind() {
		return mind;
	}

	@dirty
	public int getAction() {
		return action;
	}

	@dirty
	public int getLevel() {
		return level;
	}

	@dirty
	public boolean getRanged() {
		return ranged;
	}

	@dirty
	public int getFocus() {
		return focus;
	}

	@dirty
	public int getWillPower() {
		return willPower;
	}

	@dirty
	public int getStrength() {
		return strength;
	}

	@dirty
	public int getConstitution() {
		return constitution;
	}

	@dirty
	public int getQuickness() {
		return quickness;
	}

	@dirty
	public int getStamina() {
		return stamina;
	}

	public void setWillPower(int value) {
		willPower = value;
	}
	public void setFocus(int value) {
		focus = value;
	}
	public void setStamina(int value) {
		stamina = value;
	}
	public void setStrength(int value) {
		strength = value;
	}
	public void setQuickness(int value) {
		quickness = value;
	}
	public void setConstitution(int value) {
		constitution = value;
	}

	public void setCleverness(float value) {
		cleverness = value;
	}

	public void setEndurance(float value) {
		endurance = value;
	}

	public void setFierceness(float value) {
		fierceness = value;
	}

	public void setPower(float value) {
		power = value;
	}

	public void setIntellect(float value) {
		intellect = value;
	}

	public void setCourage(float value) {
		courage = value;
	}

	public void setDependability(float value) {
		dependability = value;
	}

	public void setDexterity(float value) {
		dexterity = value;
	}

	public void setFortitude(float value) {
		fortitude = value;
	}

	public void setHardiness(float value) {
		hardiness = value;
	}

	public void setEnergy(float value){
		energyResist = value;
	}

	public void setBlast(float value) {
		blastResist = value;
	}

	public void setCold(float value) {
		coldResist = value;
	}

	public void setHeat(float value) {
		heatResist = value;
	}

	public void setElectric(float value) {
		elecResist = value;
	}

	public void setAcid(float value) {
		acidResist = value;
	}

	public void setStun(float value) {
		stunResist = value;
	}

	public void setSaber(float value) {
		saberResist = value;
	}

	public void setArmorRating(int rating) {
		armorRating = rating;
	}

	public void setKinetic(float value) {
		kinResist = value;
	}

	public void setSpecialAttackOne(final string atk) {
		special1 = atk;
	}

	public void setSpecialAttackTwo(final string atk) {
		special2 = atk;
	}

	public void setRanged(boolean b) {
		ranged = b;
	}

	public void setQuality(int qual) {
		quality = qual;
	}

	@dirty
	public int getQuality() {
		return quality;
	}
	/**
	 * Initializes the transient members of SceneObject, must call the inherited object method first.
	 * @pre {transient members are not initialized }
	 * @post { transient members are initialized }
	 */
	public native void initializeTransientMembers();

	@local
	public native void updateCraftingValues(CraftingValues values, boolean firstUpdate);

	@local
	@dirty
	public native void fillAttributeList(AttributeListMessage msg, CreatureObject object);

	@dirty
	public native string convertSpecialAttack(string attackName);

	@dirty
	public native string resistValue(float input);

	@local
	public native void resetResists(CraftingValues values);

	@local
	public native int getEffectiveArmor();
}
