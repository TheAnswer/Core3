/*
				Copyright <SWGEmu>
		See file COPYING for copying conditions.*/

package server.zone.objects.tangible.terminal.characterbuilder;

import server.zone.objects.tangible.terminal.Terminal;
import server.zone.objects.creature.CreatureObject;
include templates.SharedObjectTemplate;
include templates.tangible.CharacterBuilderMenuNode;

class CharacterBuilderTerminal extends Terminal {
	public transient CharacterBuilderMenuNode rootNode;
	
	public CharacterBuilderTerminal() {
		Logger.setLoggingName("CharacterBuilderTerminal");
	}
	
	/**
	 * Reads and sets the template data from a SharedTangibleObjectTemplate LuaObject
	 * @pre { templateData is a valid pointer }
	 * @post { TangibleObject members are initialized }
	 * @param templateData templateData points to the SharedTangibleObjectTemplate LuaObject that is used to initialize the TangibleObject members
	 */
	@local
	public native void loadTemplateData(SharedObjectTemplate templateData);
	
	public native void initializeTransientMembers();
	
	/**
	 * Handles the radial selection sent by the client
	 * @pre { this object is locked, player is locked }
	 * @post { this object is locked, player is locked }
	 * @returns 0 if successfull
	 */
	public native int handleObjectMenuSelect(CreatureObject player, byte selectedID);
	
	public native void sendInitialChoices(CreatureObject player);
	
	/**
	 * Player gets all languages available
	 * @pre { player is locked }
	 * @post { player is locked }
	 */
	public native void giveLanguages(CreatureObject player);

	/**
	 * Enhances the target character with doc/ent buffs
	 * @pre { player is locked }
	 * @post { player is locked }
	 */
	public native void enhanceCharacter(CreatureObject player);

	/**
	 * Grants badges to the player to make them glowy in the village jedi progression system
	 * @pre { player is locked }
	 * @post { player is locked }
	 */
	public native void grantGlowyBadges(CreatureObject player);
	
	public native void grantJediInitiate(CreatureObject player);
}
