/*
				Copyright <SWGEmu>
		See file COPYING for copying conditions.*/

package server.zone.objects.tangible.pharmaceutical;

import server.zone.objects.tangible.pharmaceutical.PharmaceuticalObject;
import server.zone.objects.creature.CreatureObject;
import server.zone.packets.scene.AttributeListMessage;
include server.zone.objects.manufactureschematic.craftingvalues.CraftingValues;
include templates.SharedObjectTemplate;
include system.lang.String;

class VitalityPack extends PharmaceuticalObject {
	protected int effectiveness;
	
	public VitalityPack() {
		setLoggingName("VitalityPack");		
		effectiveness = 0;
	}
	
	@local
	public void updateCraftingValues(CraftingValues values, boolean firstUpdate) {
		effectiveness = values.getCurrentValue("strength");
		setUseCount(1);
	}
	
	@dirty
	public int getEffectiveness() {
		return effectiveness;
	}
	
	@dirty
	public boolean isVitalityPack() {
		return true;
	}
	
	/**
	 * Handles the radial selection sent by the client, must be overriden by inherited objects
	 * @pre { this object is locked, player is locked }
	 * @post { this object is locked, player is locked }
	 * @param player CreatureObject that selected the option
	 * @param selectedID selected menu id
	 * @returns 0 if successfull
	 */
	@local
	public native int handleObjectMenuSelect(CreatureObject player, byte selectedID);
	
	/**
	 * Fills the attribute list message options that are sent to player creature
	 * @pre { }
	 * @post { }
	 * @param msg attribute list message with the attributes
	 * @param object player creature to which the message is sent
	 */
	@local
	@dirty
	public native void fillAttributeList(AttributeListMessage msg, CreatureObject object);
	
}
