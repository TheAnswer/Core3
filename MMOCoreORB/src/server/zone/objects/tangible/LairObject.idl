/*
				Copyright <SWGEmu>
		See file COPYING for copying conditions.*/

package server.zone.objects.tangible;

import server.zone.objects.tangible.TangibleObject;
import server.zone.objects.tangible.DespawnLairOnPlayerDisappear;
import server.zone.objects.creature.CreatureObject;
include server.zone.CloseObjectsVector;
include system.thread.atomic.AtomicInteger;
include engine.log.Logger;
import server.zone.objects.scene.SceneObject;
import server.zone.QuadTreeEntry;

class LairObject extends TangibleObject {
	@dereferenced
	protected transient AtomicInteger numberOfPlayersInRange;
	
	protected boolean despawnOnNoPlayersInRange;

	protected transient DespawnLairOnPlayerDisappear despawnEvent;

	public LairObject() {
		Logger.setLoggingName("LairObject");

		super.closeobjects = new CloseObjectsVector();
		super.closeobjects.setNoDuplicateInsertPlan();

		despawnOnNoPlayersInRange = false;
	}

	@dirty
	public int getNumberOfPlayersInRange() {
		return numberOfPlayersInRange.get();
	}

	@read
	public boolean getDespawnOnNoPlayersInRange() {
		return despawnOnNoPlayersInRange;
	}

	@preLocked
	public void setDespawnOnNoPlayersInRange(boolean b) {
		despawnOnNoPlayersInRange = b;
	}

	public void notifyInsert(QuadTreeEntry entry) {
		SceneObject obj = (SceneObject) entry;

		if (obj == this)
			return;

		if (obj.isPlayerCreature()) {
			CreatureObject creo = (CreatureObject) obj;
			if (!creo.isInvisible()) {
				numberOfPlayersInRange.increment();
				clearDespawnEvent();
			}
		}
	}

	public void notifyDissapear(QuadTreeEntry entry) {
		SceneObject obj = (SceneObject) entry;

		if (obj == this)
			return;

		if (obj.isPlayerCreature()) {
			CreatureObject creo = (CreatureObject) obj;
			if (!creo.isInvisible()) {
				int val = numberOfPlayersInRange.decrement();

				if (val <= 0 && despawnOnNoPlayersInRange)
					activateDespawnEvent();
			}
		}
	}

	public void activateDespawnEvent() {
		if (despawnEvent != null)
			return;

		despawnEvent = new DespawnLairOnPlayerDisappear(this);
		despawnEvent.schedule(300000);		
	}

	public void clearDespawnEvent() {
		if (despawnEvent == null)
			return;

		despawnEvent.cancel();
		despawnEvent = null;
	}

	@dirty
	public boolean isLairObject() {
		return true;
	}
}
