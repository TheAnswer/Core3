/*
 Copyright <SWGEmu>
 See file COPYING for copying conditions.
 */

package server.zone.objects.ship.components;

import server.zone.objects.tangible.component.Component;
include server.zone.objects.manufactureschematic.craftingvalues.CraftingValues;
include server.zone.packets.scene.AttributeListMessage;
import server.zone.objects.ship.ShipObject;
import server.zone.objects.creature.CreatureObject;
include templates.SharedObjectTemplate;
include server.zone.objects.ship.ShipComponentData;
include server.zone.packets.DeltaMessage;

class ShipComponent extends Component {
	protected float mass;
	protected float hitpointsMax;
	protected float armorMax;
	protected float hitpoints;
	protected float armor;
	protected float energyCost;
	protected float energyEfficiency;
	protected float efficiency;
	protected float collisionRange;
	protected unsigned int componentBitmask;

	protected int componentSlot;
	protected int reverseEngineeringLevel;

	@weakReference
	protected ShipObject componentShip;

	@dereferenced
	protected string componentDataName;

	public ShipComponent() {
		mass = 0.f;
		hitpointsMax = 0.f;
		armorMax = 0.f;
		hitpoints = 0.f;
		armor = 0.f;
		energyCost = 0.f;

		energyEfficiency = 1.f;
		efficiency = 1.f;
		collisionRange = 0.f;
		componentBitmask = 0;
		componentSlot = -1;
		reverseEngineeringLevel = 1;
	}

	@read
	@dereferenced
	public string getComponentDataName() {
		return componentDataName;
	}

	public unsigned int getComponentBitmask() {
		return componentBitmask;
	}

	public float getEfficiency() {
		return efficiency;
	}

	public float getEnergyEfficiency() {
		return efficiency;
	}

	public float getMass() {
		return mass;
	}

	public float getMaxHitpoints() {
		return hitpointsMax;
	}

	public float getHitpoints() {
		return hitpoints;
	}

	public float getMaxArmor() {
		return armorMax;
	}

	public float getArmor() {
		return armor;
	}

	public float getEnergyCost() {
		return energyCost;
	}
	
	public float getCollisionRange() {
		return collisionRange;
	}

	public int getReverseEngineeringLevel() {
		return reverseEngineeringLevel;
	}

	public boolean hasComponentFlag(unsigned int value) {
		return componentBitmask & value;
	}

	@local
	public void setComponentDataName(final string name) {
		componentDataName = name;
	}

	@local
	public void setReverseEngineeringLevel(int value) {
		reverseEngineeringLevel = value;
	}

	@local
	public void setCollisionRange(float range) {
		collisionRange = range;
	}

	@local
	public void setMass(float value) {
		mass = value;
	}

	@local
	public void setEnergyCost(float value) {
		energyCost = value;
	}

	@local
	public void setEnergyEfficiency(float value) {
		energyEfficiency = value;
	}

	@local
	public void setEfficiency(float value) {
		efficiency = value;
	}

	@local
	public void setHitpointsMax(float value) {
		hitpointsMax = value;
	}

	@local
	public void setArmorMax(float value) {
		armorMax = value;
	}

	@local
	public void setArmor(float value) {
		armor = value;
	}

	@local
	public void setHitpoints(float value) {
		hitpoints = value;
	}

	@local
	public void setComponentBitmask(unsigned int value) {
		componentBitmask = value;
	}

	@local
	public native void addComponentFlag(unsigned int value);

	@local
	public native void removeComponentFlag(unsigned int value);

	@local
	public native void loadTemplateData(SharedObjectTemplate templateData);

	@local
	public abstract native void updateCraftingValues(CraftingValues values, boolean firstUpdate);

	@local
	@dirty
	public abstract native void fillAttributeList(AttributeListMessage msg, CreatureObject object);

	@local
	public abstract native void install(CreatureObject pilot, ShipObject ship, int slot, boolean notifyClient);

	@local
	public abstract native void uninstall(CreatureObject pilot, ShipObject ship, int slot, boolean notifyClient);
}
