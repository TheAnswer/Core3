/*
 Copyright <SWGEmu>
 See file COPYING for copying conditions.
 */

package server.zone.objects.ship.components;

import server.zone.objects.ship.components.ShipComponent;
import server.zone.objects.ship.ShipObject;
include server.zone.objects.manufactureschematic.craftingvalues.CraftingValues;
include server.zone.packets.scene.AttributeListMessage;
import server.zone.objects.creature.CreatureObject;
include templates.SharedObjectTemplate;

class ShipEngineComponent extends ShipComponent {	
	protected float maxPitch;
	protected float maxRoll;
	protected float maxYaw;
	protected float maxSpeed;
	protected float acceleration;
	protected float deceleration;

	public ShipEngineComponent() {
		super();

		maxPitch = 0.f;
		maxRoll = 0.f;
		maxYaw = 0.f;
		maxSpeed = 0.f;
		acceleration = 0.f;
		deceleration = 0.f;
	}

	public float getMaxPitch() {
		return maxPitch;
	}

	public float getMaxYaw() {
		return maxYaw;
	}

	public float getMaxRoll() {
		return maxRoll;
	}

	public float getMaxSpeed() {
		return maxSpeed;
	}

	public float getMaxAcceleration() {
		return acceleration;
	}

	public float getMaxDeceleration() {
		return deceleration;
	}

	public void setMaxYaw(float value) {
		maxYaw = value;
	}

	public void setMaxRoll(float value) {
		maxRoll = value;
	}

	public void setMaxPitch(float value) {
		maxPitch = value;
	}

	public void setMaxSpeed(float value) {
		maxSpeed = value;
	}

	public void setMaxAcceleration(float value) {
		acceleration = value;
	}

	public void setMaxDeceleration(float value) {
		deceleration = value;
	}

	@local
	public native void loadTemplateData(SharedObjectTemplate templateData);

	@local
	public abstract native void updateCraftingValues(CraftingValues values, boolean firstUpdate);

	@local
	@dirty
	public native void fillAttributeList(AttributeListMessage msg, CreatureObject object);

	@local
	public abstract native void install(CreatureObject owner, ShipObject component, int slot, boolean notifyClient);

	@local
	public abstract native void uninstall(CreatureObject owner, ShipObject component, int slot, boolean notifyClient);
}
