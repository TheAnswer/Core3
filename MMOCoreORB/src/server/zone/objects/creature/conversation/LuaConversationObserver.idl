/*
				Copyright <SWGEmu>
		See file COPYING for copying conditions.
*/

package server.zone.objects.creature.conversation;

import server.zone.objects.creature.conversation.ConversationObserver;
include server.zone.objects.creature.conversation.ConversationTemplate;
import server.zone.objects.creature.CreatureObject;
include server.zone.objects.creature.conversation.ConversationScreen;
include server.zone.managers.director.DirectorManager;

class LuaConversationObserver extends ConversationObserver {
	public LuaConversationObserver(unsigned int convoTemplateCRC) {
		super(convoTemplateCRC);
	}

	@local
	public ConversationScreen getNextConversationScreen(CreatureObject conversingPlayer, int selectedOption, CreatureObject conversingNPC) {
		ConversationTemplate conversationTemplate = getConversationTemplate();

		return DirectorManager.instance().getNextConversationScreen(conversationTemplate.getLuaClassHandler(), conversationTemplate, conversingPlayer, selectedOption, conversingNPC);
	}

	@local
	public ConversationScreen runScreenHandlers(CreatureObject conversingPlayer, CreatureObject conversingNPC, int selectedOption, ConversationScreen conversationScreen) {
		ConversationTemplate conversationTemplate = getConversationTemplate();

		return DirectorManager.instance().runScreenHandlers(conversationTemplate.getLuaClassHandler(),conversationTemplate, conversingPlayer, conversingNPC, selectedOption, conversationScreen);
	}
}
