/*
				Copyright <SWGEmu>
		See file COPYING for copying conditions.*/

include server.zone.objects.creature.ai.DroidObject;
import server.zone.objects.creature.CreatureObject;
import server.zone.packets.object.ObjectMenuResponse;
import server.zone.packets.scene.AttributeListMessage;
import server.zone.objects.creature.ai.AiAgent;
import engine.log.Logger;
include server.zone.objects.tangible.components.droid.BaseDroidModuleComponent;
include server.zone.objects.tangible.tool.CraftingStation;
include server.zone.objects.structure.StructureObject;
include system.lang.ref.Reference;
import server.zone.Zone;
import server.zone.objects.scene.SceneObject;

@json
class HelperDroidObject extends DroidObject {

	public native void initializeTransientMembers();

	public HelperDroidObject() {
		Logger.setLoggingName("HelperDroidObject");
		Logger.setLogging(false);
		Logger.setGlobalLogging(true);
	}

	/**
	 * Fills the attribute list message options that are sent to player creature
	 * @pre { }
	 * @post { }
	 * @param msg attribute list message with the attributes
	 * @param object player creature to which the message is sent
	 */
	@local
	@dirty
	public native void fillAttributeList(AttributeListMessage msg, CreatureObject object);

	/**
	 * Handles the radial selection sent by the client, must be overriden by inherited objects
	 * @pre { this object is locked, player is locked }
	 * @post { this object is locked, player is locked }
	 * @param player CreatureObject that selected the option
	 * @param selectedID selected menu id
	 * @returns 0 if successfull
	 */
	@local
	@dirty
	@preLocked
	@arg1preLocked
	public native abstract int handleObjectMenuSelect(CreatureObject player, byte selectedID);

	/**
	 * Fills the module radial options, needs to be overriden
	 * @pre { this object is locked }
	 * @post { this object is locked, menuResponse is complete}
	 * @param menuResponse ObjectMenuResponse that will be sent to the client
	 */
	@local
	@dirty
	public native abstract void fillObjectMenuResponse(ObjectMenuResponse menuResponse, CreatureObject player);

	@local
	@preLocked
	public native void onCall();

	@preLocked
	public native void notifyHelperDroidSkillTrained(CreatureObject player, final string skillString);

	@dirty
	public boolean isHelperDroidObject() {
		return true;
	}
}