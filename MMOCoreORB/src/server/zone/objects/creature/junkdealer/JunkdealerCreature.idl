/*
Copyright (C) 2007 <SWGEmu>

This File is part of Core3.

This program is free software; you can redistribute
it and/or modify it under the terms of the GNU Lesser
General Public License as published by the Free Software
Foundation; either version 2 of the License,
or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU Lesser General Public License for
more details.

You should have received a copy of the GNU Lesser General
Public License along with this program; if not, write to
the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA

Linking Engine3 statically or dynamically with other modules
is making a combined work based on Engine3.
Thus, the terms and conditions of the GNU Lesser General Public License
cover the whole combination.

In addition, as a special exception, the copyright holders of Engine3
give you permission to combine Engine3 program with free software
programs or libraries that are released under the GNU LGPL and with
code included in the standard release of Core3 under the GNU LGPL
license (or modified versions of such code, with unchanged license).
You may copy and distribute such a system following the terms of the
GNU LGPL for Engine3 and the licenses of the other code concerned,
provided that you include the source code of that other code when
and as the GNU LGPL requires distribution of source code.

Note that people who make modified versions of Engine3 are not obligated
to grant this special exception for their modified versions;
it is their choice whether to do so. The GNU Lesser General Public License
gives permission to release a modified version without this exception;
this exception also makes it possible to release a modified version
which carries forward this exception.
*/

package server.zone.objects.creature.junkdealer;

import engine.core.ManagedObject;
import engine.lua.LuaObject;
import system.util.Vector;
import system.lang.Time;
import server.zone.Zone;
import system.util.SortedVector;
import server.zone.objects.creature.CreatureObject;
import server.zone.objects.scene.SceneObject;

include server.zone.objects.creature.variables.Skill;

class JunkdealerCreature extends CreatureObject {

	protected string location;

	public static final int BLUERUG = 0xFC9F6877;//4238305399; // object/tangible/loot/collectible/kits/blue_rug_kit.iff
	public static final int ORANGERUG = 0xEF7647E0;//4017506272; // object/tangible/loot/collectible/kits/orange_rug_kit.iff
	public static final int SCULPTURE = 0x5000DA81;//1342233217; // object/tangible/loot/collectible/kits/sculpture_kit.iff
	public static final int TABLE = 0x4674A1B6;//1182048694; // object/tangible/loot/collectible/kits/light_table_kit.iff
	public static final int GONG = 0xB26210DB;//2992771291; // object/tangible/loot/collectible/kits/gong_kit.iff
	

	public static final int JUNKCONVGENERIC = 1;
	public static final int JUNKCONVARMS = 2;
	public static final int JUNKCONVFINARY = 3;
	public static final int JUNKCONVDENDERRORI = 4;
	public static final int JUNKCONVDENDERTHEED = 5;
	public static final int JUNKCONVLILABORVO = 6;
	public static final int JUNKCONVMALIKVISTAL = 7;
	public static final int JUNKCONVNADOWATTOS = 8;
	public static final int JUNKCONVNATHANTAIKE = 9;
	public static final int JUNKCONVOLLOBOJABBAS = 10;
	public static final int JUNKCONVQUICHDANTOOINE = 11;
	public static final int JUNKCONVREGGINYM = 12;
	public static final int JUNKCONVSHEANILAKE = 13;
	public static final int JUNKCONVSNEGVALARIAN = 14;
	public static final int JUNKCONVJAWAGENERIC = 15;
	public static final int JUNKCONVJAWAFINARY = 16;
	public static final int JUNKCONVJAWAARMS = 17;
	public static final int JUNKCONVJAWATUSKEN = 18;

	protected int junkDealerBuyerType;
	protected int junkDealerConversationType;


	public JunkdealerCreature() {
		Logger.setLoggingName("JunkdealerCreature");

		junkDealerConversationType = 0;
		junkDealerBuyerType = 0;
	}
	
	@local
	public void loadTemplateData(SharedObjectTemplate templateData) {
		super.loadTemplateData(templateData);
		
		super.optionsBitmask = 0x108;
		super.pvpStatusBitmask = 0;
	}

	/**
	 * Sends the initial trainer NPC blurb.
	 * \param player The player to send the conversation to.
	 */
	public native void sendInitialMessage(CreatureObject player);
	/**
	 * Sends the initial trainer NPC options.
	 * \param player The player to send the conversation to.
	 */
	public native void sendInitialChoices(CreatureObject player);
	/**
	 * Sends the intial message to start the
	 * training conversation. Checks for
	 * qualificactions.
	 * \param player The player to send the conversation to (in SceneObject form).
	 */
	public native void sendConversationStartTo(SceneObject obj);
	

	/**
	 * Handles the options that the player has selected
	 * and sets the last conversation strings to be used
	 * to determine how to parse the option selected.
	 * \param option The numerical selection the player has made (0indexed).
	 * \param obj The player to send the conversation to (in SceneObject form).
	 */
	public native void selectConversationOption(int option, SceneObject obj);

	public native string getConversationString(int dealerType);

	public string getLocation() {
		return location;
	}

	public void setLocation(final string loc) {
		location = loc;
	}
	
	public boolean isAttackableBy(CreatureObject object) {
		return false;
	}
	
	public native void createSellJunkLootSelection(CreatureObject player);

	public native boolean canInventoryItemBeSoldAsJunk(TangibleObject lootItem,int dealerType);

	public void setJunkDealerBuyerType(int jdBuyerType) {
		junkDealerBuyerType = jdBuyerType;
	}
	
	public abstract int getJunkDealerBuyerType() {
		return junkDealerBuyerType;
	}
	public void setJunkDealerConversationType(int jdConvoType) {
		junkDealerConversationType = jdConvoType;
	}
	
	public abstract int getJunkDealerConversationType() {
		return junkDealerConversationType;
	}
	public boolean isJunkDealer() {
		return true; 
	}
	public native void sendConversationTerminate(CreatureObject player,final string stfFile,final string convTerminateMsg);

	public native void sendConversationContinue(CreatureObject player,final string stfFile,final string convMsg,final string convOption1,final string convOption2);
}
