/*
 *	server/zone/objects/player/sui/characterbuilderbox/SuiCharacterBuilderBox.cpp generated by engine3 IDL compiler 0.60
 */

#include "SuiCharacterBuilderBox.h"

#include "server/zone/objects/player/PlayerCreature.h"

/*
 *	SuiCharacterBuilderBoxStub
 */

SuiCharacterBuilderBox::SuiCharacterBuilderBox(PlayerCreature* player, CharacterBuilderMenuNode* root) : SuiListBox(DummyConstructorParameter::instance()) {
	ManagedObject::_setImplementation(new SuiCharacterBuilderBoxImplementation(player, root));
	ManagedObject::_getImplementation()->_setStub(this);
}

SuiCharacterBuilderBox::SuiCharacterBuilderBox(DummyConstructorParameter* param) : SuiListBox(param) {
}

SuiCharacterBuilderBox::~SuiCharacterBuilderBox() {
}


BaseMessage* SuiCharacterBuilderBox::generateMessage() {
	if (isNull()) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);

		return (BaseMessage*) method.executeWithObjectReturn();
	} else
		return ((SuiCharacterBuilderBoxImplementation*) _getImplementation())->generateMessage();
}

CharacterBuilderMenuNode* SuiCharacterBuilderBox::getCurrentNode() {
	if (isNull()) {
		throw ObjectNotLocalException(this);

	} else
		return ((SuiCharacterBuilderBoxImplementation*) _getImplementation())->getCurrentNode();
}

void SuiCharacterBuilderBox::setCurrentNode(CharacterBuilderMenuNode* node) {
	if (isNull()) {
		throw ObjectNotLocalException(this);

	} else
		((SuiCharacterBuilderBoxImplementation*) _getImplementation())->setCurrentNode(node);
}

bool SuiCharacterBuilderBox::isCharacterBuilderBox() {
	if (isNull()) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 7);

		return method.executeWithBooleanReturn();
	} else
		return ((SuiCharacterBuilderBoxImplementation*) _getImplementation())->isCharacterBuilderBox();
}

/*
 *	SuiCharacterBuilderBoxImplementation
 */

SuiCharacterBuilderBoxImplementation::SuiCharacterBuilderBoxImplementation(DummyConstructorParameter* param) : SuiListBoxImplementation(param) {
	_initializeImplementation();
}


SuiCharacterBuilderBoxImplementation::~SuiCharacterBuilderBoxImplementation() {
}


void SuiCharacterBuilderBoxImplementation::finalize() {
}

void SuiCharacterBuilderBoxImplementation::_initializeImplementation() {
	_setClassHelper(SuiCharacterBuilderBoxHelper::instance());

	_serializationHelperMethod();
}

void SuiCharacterBuilderBoxImplementation::_setStub(DistributedObjectStub* stub) {
	_this = (SuiCharacterBuilderBox*) stub;
	SuiListBoxImplementation::_setStub(stub);
}

DistributedObjectStub* SuiCharacterBuilderBoxImplementation::_getStub() {
	return _this;
}

SuiCharacterBuilderBoxImplementation::operator const SuiCharacterBuilderBox*() {
	return _this;
}

TransactionalObject* SuiCharacterBuilderBoxImplementation::clone() {
	return (TransactionalObject*) new SuiCharacterBuilderBoxImplementation(*this);
}


void SuiCharacterBuilderBoxImplementation::lock(bool doLock) {
	_this->lock(doLock);
}

void SuiCharacterBuilderBoxImplementation::lock(ManagedObject* obj) {
	_this->lock(obj);
}

void SuiCharacterBuilderBoxImplementation::rlock(bool doLock) {
	_this->rlock(doLock);
}

void SuiCharacterBuilderBoxImplementation::wlock(bool doLock) {
	_this->wlock(doLock);
}

void SuiCharacterBuilderBoxImplementation::wlock(ManagedObject* obj) {
	_this->wlock(obj);
}

void SuiCharacterBuilderBoxImplementation::unlock(bool doLock) {
	_this->unlock(doLock);
}

void SuiCharacterBuilderBoxImplementation::runlock(bool doLock) {
	_this->runlock(doLock);
}

void SuiCharacterBuilderBoxImplementation::_serializationHelperMethod() {
	SuiListBoxImplementation::_serializationHelperMethod();

	_setClassName("SuiCharacterBuilderBox");

}

SuiCharacterBuilderBoxImplementation::SuiCharacterBuilderBoxImplementation(PlayerCreature* player, CharacterBuilderMenuNode* root) : SuiListBoxImplementation(player, SuiWindowType::CHARACTERBUILDERITEMSELECT, 0) {
	_initializeImplementation();
	// server/zone/objects/player/sui/characterbuilderbox/SuiCharacterBuilderBox.idl(59):  		Logger.setLoggingName("SuiCharacterBuilderBox");
	Logger::setLoggingName("SuiCharacterBuilderBox");
	// server/zone/objects/player/sui/characterbuilderbox/SuiCharacterBuilderBox.idl(61):  		setPromptTitle("Character Builder");
	setPromptTitle("Character Builder");
	// server/zone/objects/player/sui/characterbuilderbox/SuiCharacterBuilderBox.idl(63):  		setPromptText("Provided below are items which the developers feel are necessary to complete the current testing objectives. Please select only the items which you require.");
	setPromptText("Provided below are items which the developers feel are necessary to complete the current testing objectives. Please select only the items which you require.");
	// server/zone/objects/player/sui/characterbuilderbox/SuiCharacterBuilderBox.idl(65):  		rootNode = root;
	rootNode = root;
	// server/zone/objects/player/sui/characterbuilderbox/SuiCharacterBuilderBox.idl(67):  		currentNode = root;
	currentNode = root;
}

bool SuiCharacterBuilderBoxImplementation::isCharacterBuilderBox() {
	// server/zone/objects/player/sui/characterbuilderbox/SuiCharacterBuilderBox.idl(79):  		return true;
	return true;
}

/*
 *	SuiCharacterBuilderBoxAdapter
 */

SuiCharacterBuilderBoxAdapter::SuiCharacterBuilderBoxAdapter(SuiCharacterBuilderBoxImplementation* obj) : SuiListBoxAdapter(obj) {
}

Packet* SuiCharacterBuilderBoxAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		resp->insertLong(generateMessage()->_getObjectID());
		break;
	case 7:
		resp->insertBoolean(isCharacterBuilderBox());
		break;
	default:
		return NULL;
	}

	return resp;
}

BaseMessage* SuiCharacterBuilderBoxAdapter::generateMessage() {
	return ((SuiCharacterBuilderBoxImplementation*) impl)->generateMessage();
}

bool SuiCharacterBuilderBoxAdapter::isCharacterBuilderBox() {
	return ((SuiCharacterBuilderBoxImplementation*) impl)->isCharacterBuilderBox();
}

/*
 *	SuiCharacterBuilderBoxHelper
 */

SuiCharacterBuilderBoxHelper* SuiCharacterBuilderBoxHelper::staticInitializer = SuiCharacterBuilderBoxHelper::instance();

SuiCharacterBuilderBoxHelper::SuiCharacterBuilderBoxHelper() {
	className = "SuiCharacterBuilderBox";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void SuiCharacterBuilderBoxHelper::finalizeHelper() {
	SuiCharacterBuilderBoxHelper::finalize();
}

DistributedObject* SuiCharacterBuilderBoxHelper::instantiateObject() {
	return new SuiCharacterBuilderBox(DummyConstructorParameter::instance());
}

DistributedObjectServant* SuiCharacterBuilderBoxHelper::instantiateServant() {
	return new SuiCharacterBuilderBoxImplementation(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* SuiCharacterBuilderBoxHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new SuiCharacterBuilderBoxAdapter((SuiCharacterBuilderBoxImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

